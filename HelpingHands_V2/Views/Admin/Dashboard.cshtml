@model HelpingHands_V2.ViewModels.AdminViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
    var Message = ViewBag.Message;
}
<section class="container-fluid" id="AdminDashboard">
    <h2 class="display-4 text-center p-2">Hello @User.Identity?.Name</h2>
    @if (Message != null)
    {
        <p class="text-decoration-underline text-danger">@Message</p>
    }
    <div class="px-5"><hr /></div>
    <div class="container-fluid">
        <ul class="nav nav-tabs justify-content-center" id="AdminDashboardTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="nurse-tab" data-bs-toggle="tab" data-bs-target="#nurse-tab-pane" type="button" role="tab" aria-controls="nurse-tab-pane" aria-selected="true">Nurse</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="patient-tab" data-bs-toggle="tab" data-bs-target="#patient-tab-pane" type="button" role="tab" aria-controls="patient-tab-pane" aria-selected="false">Patient</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <article class="tab-pane fade show active" id="nurse-tab-pane" role="tabpanel" aria-labelledby="nurse-tab" tabindex="0">
                @foreach(var contract in Model.AssignedContracts!)
                {
                    @contract.Nurse.Firstname
                }
                <canvas id="myChart"></canvas>
            </article>
            <article class="tab-pane fade" id="patient-tab-pane" role="tabpanel" aria-labelledby="patient-tab" tabindex="0">
                @foreach (var contract in Model.ClosedContracts!)
                {
                    @contract.EndDate
                }
            </article>
        </div>
    </div>
</section>

<script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>